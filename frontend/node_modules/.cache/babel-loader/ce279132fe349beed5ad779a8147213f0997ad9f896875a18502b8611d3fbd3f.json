{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hajar\\\\Desktop\\\\recommandation-marrakech\\\\frontend\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Bonjour ! Je suis votre guide virtuel pour Marrakech. Posez-moi vos questions sur les activités, restaurants ou hôtels.\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const chatboxRef = useRef(null);\n  const quickQuestions = [\"Quels sont les meilleurs restaurants?\", \"Où puis-je trouver des hôtels pas chers?\", \"Quelles activités recommandez-vous?\"];\n  const handleQuickQuestion = question => {\n    setInput(question);\n    setTimeout(sendMessage, 0);\n  };\n  const sendMessage = async () => {\n    if (!input.trim() || loading) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setLoading(true);\n    const userInput = input;\n    setInput(\"\");\n    try {\n      var _data$choices, _data$choices$, _data$choices$$messag;\n      const response = await fetch(\"https://openrouter.ai/api/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_OPENROUTER_API_KEY}`,\n          \"HTTP-Referer\": \"http://localhost:3000\",\n          \"X-Title\": \"Marrakech Guide Bot\"\n        },\n        body: JSON.stringify({\n          model: \"openchat/openchat-3.5\",\n          messages: [{\n            role: \"system\",\n            content: \"Tu es un guide touristique expert sur Marrakech.\"\n          }, {\n            role: \"user\",\n            content: userInput\n          }]\n        })\n      });\n      const data = await response.json();\n      const botResponse = ((_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || \"Je n’ai pas compris. Peux-tu reformuler ?\";\n      setMessages(prev => [...prev, {\n        text: botResponse,\n        sender: \"bot\"\n      }]);\n    } catch (error) {\n      console.error(\"Erreur OpenRouter :\", error);\n      setMessages(prev => [...prev, {\n        text: \"Désolé, une erreur est survenue. Réessayez plus tard.\",\n        sender: \"bot\"\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    var _chatboxRef$current;\n    (_chatboxRef$current = chatboxRef.current) === null || _chatboxRef$current === void 0 ? void 0 : _chatboxRef$current.scrollTo(0, chatboxRef.current.scrollHeight);\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"Guide Virtuel Marrakech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatbox,\n      ref: chatboxRef,\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: msg.sender === \"user\" ? styles.userMessage : styles.botMessage,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.botMessage,\n        children: \"Je recherche la r\\xE9ponse...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.quickQuestions,\n      children: quickQuestions.map((question, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.quickBtn,\n        onClick: () => handleQuickQuestion(question),\n        disabled: loading,\n        children: question\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && sendMessage(),\n        placeholder: \"Posez votre question sur Marrakech...\",\n        style: styles.input,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: styles.button,\n        disabled: loading || !input.trim(),\n        children: loading ? \"...\" : \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"FGQlSmMhrT91NcCVnzLNpR1NhE8=\");\n_c = Chatbot;\nconst styles = {\n  container: {\n    maxWidth: \"800px\",\n    margin: \"0 auto\",\n    padding: \"20px\",\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\n  },\n  title: {\n    color: \"#e63946\",\n    textAlign: \"center\",\n    marginBottom: \"20px\"\n  },\n  chatbox: {\n    height: \"300px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"8px\",\n    padding: \"15px\",\n    overflowY: \"auto\",\n    marginBottom: \"15px\",\n    backgroundColor: \"#f8f9fa\"\n  },\n  userMessage: {\n    backgroundColor: \"#e63946\",\n    color: \"white\",\n    padding: \"10px 15px\",\n    borderRadius: \"18px 188px 0 18px\",\n    margin: \"8px 0\",\n    maxWidth: \"80%\",\n    alignSelf: \"flex-end\",\n    wordWrap: \"break-word\"\n  },\n  botMessage: {\n    backgroundColor: \"#f1f1f1\",\n    color: \"#333\",\n    padding: \"10px 15px\",\n    borderRadius: \"18px 18px 18px 0\",\n    margin: \"8px 0\",\n    maxWidth: \"80%\",\n    wordWrap: \"break-word\"\n  },\n  inputContainer: {\n    display: \"flex\",\n    gap: \"10px\"\n  },\n  input: {\n    flex: 1,\n    padding: \"12px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"8px\",\n    fontSize: \"16px\"\n  },\n  button: {\n    padding: \"12px 20px\",\n    backgroundColor: \"#e63946\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    fontSize: \"16px\",\n    transition: \"background-color 0.3s\"\n  },\n  quickQuestions: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    gap: \"10px\",\n    marginBottom: \"15px\"\n  },\n  quickBtn: {\n    padding: \"8px 12px\",\n    backgroundColor: \"#f8f9fa\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"20px\",\n    cursor: \"pointer\",\n    fontSize: \"14px\",\n    transition: \"all 0.3s\"\n  }\n};\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","text","sender","input","setInput","loading","setLoading","chatboxRef","quickQuestions","handleQuickQuestion","question","setTimeout","sendMessage","trim","userMessage","prev","userInput","_data$choices","_data$choices$","_data$choices$$messag","response","fetch","method","headers","Authorization","process","env","REACT_APP_OPENROUTER_API_KEY","body","JSON","stringify","model","role","content","data","json","botResponse","choices","message","error","console","_chatboxRef$current","current","scrollTo","scrollHeight","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","chatbox","ref","map","msg","index","botMessage","i","quickBtn","onClick","disabled","inputContainer","type","value","onChange","e","target","onKeyPress","key","placeholder","button","_c","maxWidth","margin","padding","fontFamily","color","textAlign","marginBottom","height","border","borderRadius","overflowY","backgroundColor","alignSelf","wordWrap","display","gap","flex","fontSize","cursor","transition","flexWrap","$RefreshReg$"],"sources":["C:/Users/Hajar/Desktop/recommandation-marrakech/frontend/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      text: \"Bonjour ! Je suis votre guide virtuel pour Marrakech. Posez-moi vos questions sur les activités, restaurants ou hôtels.\",\r\n      sender: \"bot\"\r\n    }\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const chatboxRef = useRef(null);\r\n\r\n  const quickQuestions = [\r\n    \"Quels sont les meilleurs restaurants?\",\r\n    \"Où puis-je trouver des hôtels pas chers?\",\r\n    \"Quelles activités recommandez-vous?\"\r\n  ];\r\n\r\n  const handleQuickQuestion = (question) => {\r\n    setInput(question);\r\n    setTimeout(sendMessage, 0);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim() || loading) return;\r\n\r\n    const userMessage = { text: input, sender: \"user\" };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setLoading(true);\r\n    const userInput = input;\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"https://openrouter.ai/api/v1/chat/completions\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${process.env.REACT_APP_OPENROUTER_API_KEY}`,\r\n          \"HTTP-Referer\": \"http://localhost:3000\",\r\n          \"X-Title\": \"Marrakech Guide Bot\"\r\n        },\r\n        body: JSON.stringify({\r\n          model: \"openchat/openchat-3.5\",\r\n          messages: [\r\n            { role: \"system\", content: \"Tu es un guide touristique expert sur Marrakech.\" },\r\n            { role: \"user\", content: userInput }\r\n          ]\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botResponse = data.choices?.[0]?.message?.content || \"Je n’ai pas compris. Peux-tu reformuler ?\";\r\n      setMessages(prev => [...prev, { text: botResponse, sender: \"bot\" }]);\r\n    } catch (error) {\r\n      console.error(\"Erreur OpenRouter :\", error);\r\n      setMessages(prev => [...prev, {\r\n        text: \"Désolé, une erreur est survenue. Réessayez plus tard.\",\r\n        sender: \"bot\"\r\n      }]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    chatboxRef.current?.scrollTo(0, chatboxRef.current.scrollHeight);\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.title}>Guide Virtuel Marrakech</h1>\r\n      <div style={styles.chatbox} ref={chatboxRef}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} style={msg.sender === \"user\" ? styles.userMessage : styles.botMessage}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n        {loading && <div style={styles.botMessage}>Je recherche la réponse...</div>}\r\n      </div>\r\n\r\n      <div style={styles.quickQuestions}>\r\n        {quickQuestions.map((question, i) => (\r\n          <button\r\n            key={i}\r\n            style={styles.quickBtn}\r\n            onClick={() => handleQuickQuestion(question)}\r\n            disabled={loading}\r\n          >\r\n            {question}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={styles.inputContainer}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n          placeholder=\"Posez votre question sur Marrakech...\"\r\n          style={styles.input}\r\n          disabled={loading}\r\n        />\r\n        <button\r\n          onClick={sendMessage}\r\n          style={styles.button}\r\n          disabled={loading || !input.trim()}\r\n        >\r\n          {loading ? \"...\" : \"Envoyer\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    maxWidth: \"800px\",\r\n    margin: \"0 auto\",\r\n    padding: \"20px\",\r\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\r\n  },\r\n  title: {\r\n    color: \"#e63946\",\r\n    textAlign: \"center\",\r\n    marginBottom: \"20px\"\r\n  },\r\n  chatbox: {\r\n    height: \"300px\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"8px\",\r\n    padding: \"15px\",\r\n    overflowY: \"auto\",\r\n    marginBottom: \"15px\",\r\n    backgroundColor: \"#f8f9fa\",\r\n  },\r\n  userMessage: {\r\n    backgroundColor: \"#e63946\",\r\n    color: \"white\",\r\n    padding: \"10px 15px\",\r\n    borderRadius: \"18px 188px 0 18px\",\r\n    margin: \"8px 0\",\r\n    maxWidth: \"80%\",\r\n    alignSelf: \"flex-end\",\r\n    wordWrap: \"break-word\",\r\n  },\r\n  botMessage: {\r\n    backgroundColor: \"#f1f1f1\",\r\n    color: \"#333\",\r\n    padding: \"10px 15px\",\r\n    borderRadius: \"18px 18px 18px 0\",\r\n    margin: \"8px 0\",\r\n    maxWidth: \"80%\",\r\n    wordWrap: \"break-word\",\r\n  },\r\n  inputContainer: {\r\n    display: \"flex\",\r\n    gap: \"10px\",\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    padding: \"12px\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"8px\",\r\n    fontSize: \"16px\",\r\n  },\r\n  button: {\r\n    padding: \"12px 20px\",\r\n    backgroundColor: \"#e63946\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"8px\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"16px\",\r\n    transition: \"background-color 0.3s\",\r\n  },\r\n  quickQuestions: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    gap: \"10px\",\r\n    marginBottom: \"15px\",\r\n  },\r\n  quickBtn: {\r\n    padding: \"8px 12px\",\r\n    backgroundColor: \"#f8f9fa\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"20px\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"14px\",\r\n    transition: \"all 0.3s\",\r\n  },\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CACvC;IACES,IAAI,EAAE,yHAAyH;IAC/HC,MAAM,EAAE;EACV,CAAC,CACF,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMe,UAAU,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE/B,MAAMc,cAAc,GAAG,CACrB,uCAAuC,EACvC,0CAA0C,EAC1C,qCAAqC,CACtC;EAED,MAAMC,mBAAmB,GAAIC,QAAQ,IAAK;IACxCN,QAAQ,CAACM,QAAQ,CAAC;IAClBC,UAAU,CAACC,WAAW,EAAE,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACT,KAAK,CAACU,IAAI,CAAC,CAAC,IAAIR,OAAO,EAAE;IAE9B,MAAMS,WAAW,GAAG;MAAEb,IAAI,EAAEE,KAAK;MAAED,MAAM,EAAE;IAAO,CAAC;IACnDF,WAAW,CAACe,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,WAAW,CAAC,CAAC;IAC3CR,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMU,SAAS,GAAGb,KAAK;IACvBC,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MAAA,IAAAa,aAAA,EAAAC,cAAA,EAAAC,qBAAA;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;QAC5EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUC,OAAO,CAACC,GAAG,CAACC,4BAA4B,EAAE;UACnE,cAAc,EAAE,uBAAuB;UACvC,SAAS,EAAE;QACb,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAE,uBAAuB;UAC9BhC,QAAQ,EAAE,CACR;YAAEiC,IAAI,EAAE,QAAQ;YAAEC,OAAO,EAAE;UAAmD,CAAC,EAC/E;YAAED,IAAI,EAAE,MAAM;YAAEC,OAAO,EAAEjB;UAAU,CAAC;QAExC,CAAC;MACH,CAAC,CAAC;MAEF,MAAMkB,IAAI,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;MAClC,MAAMC,WAAW,GAAG,EAAAnB,aAAA,GAAAiB,IAAI,CAACG,OAAO,cAAApB,aAAA,wBAAAC,cAAA,GAAZD,aAAA,CAAe,CAAC,CAAC,cAAAC,cAAA,wBAAAC,qBAAA,GAAjBD,cAAA,CAAmBoB,OAAO,cAAAnB,qBAAA,uBAA1BA,qBAAA,CAA4Bc,OAAO,KAAI,2CAA2C;MACtGjC,WAAW,CAACe,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAEd,IAAI,EAAEmC,WAAW;QAAElC,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;IACtE,CAAC,CAAC,OAAOqC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CvC,WAAW,CAACe,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAC5Bd,IAAI,EAAE,uDAAuD;QAC7DC,MAAM,EAAE;MACV,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACRI,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IAAA,IAAAgD,mBAAA;IACd,CAAAA,mBAAA,GAAAlC,UAAU,CAACmC,OAAO,cAAAD,mBAAA,uBAAlBA,mBAAA,CAAoBE,QAAQ,CAAC,CAAC,EAAEpC,UAAU,CAACmC,OAAO,CAACE,YAAY,CAAC;EAClE,CAAC,EAAE,CAAC7C,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAKiD,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,gBAC3BpD,OAAA;MAAIiD,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrDzD,OAAA;MAAKiD,KAAK,EAAEC,MAAM,CAACQ,OAAQ;MAACC,GAAG,EAAEhD,UAAW;MAAAyC,QAAA,GACzCjD,QAAQ,CAACyD,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB9D,OAAA;QAAiBiD,KAAK,EAAEY,GAAG,CAACvD,MAAM,KAAK,MAAM,GAAG4C,MAAM,CAAChC,WAAW,GAAGgC,MAAM,CAACa,UAAW;QAAAX,QAAA,EACpFS,GAAG,CAACxD;MAAI,GADDyD,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC,EACDhD,OAAO,iBAAIT,OAAA;QAAKiD,KAAK,EAAEC,MAAM,CAACa,UAAW;QAAAX,QAAA,EAAC;MAA0B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC,eAENzD,OAAA;MAAKiD,KAAK,EAAEC,MAAM,CAACtC,cAAe;MAAAwC,QAAA,EAC/BxC,cAAc,CAACgD,GAAG,CAAC,CAAC9C,QAAQ,EAAEkD,CAAC,kBAC9BhE,OAAA;QAEEiD,KAAK,EAAEC,MAAM,CAACe,QAAS;QACvBC,OAAO,EAAEA,CAAA,KAAMrD,mBAAmB,CAACC,QAAQ,CAAE;QAC7CqD,QAAQ,EAAE1D,OAAQ;QAAA2C,QAAA,EAEjBtC;MAAQ,GALJkD,CAAC;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMA,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENzD,OAAA;MAAKiD,KAAK,EAAEC,MAAM,CAACkB,cAAe;MAAAhB,QAAA,gBAChCpD,OAAA;QACEqE,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE/D,KAAM;QACbgE,QAAQ,EAAGC,CAAC,IAAKhE,QAAQ,CAACgE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI3D,WAAW,CAAC,CAAE;QACtD4D,WAAW,EAAC,uCAAuC;QACnD3B,KAAK,EAAEC,MAAM,CAAC3C,KAAM;QACpB4D,QAAQ,EAAE1D;MAAQ;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACFzD,OAAA;QACEkE,OAAO,EAAElD,WAAY;QACrBiC,KAAK,EAAEC,MAAM,CAAC2B,MAAO;QACrBV,QAAQ,EAAE1D,OAAO,IAAI,CAACF,KAAK,CAACU,IAAI,CAAC,CAAE;QAAAmC,QAAA,EAElC3C,OAAO,GAAG,KAAK,GAAG;MAAS;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvD,EAAA,CAhHQD,OAAO;AAAA6E,EAAA,GAAP7E,OAAO;AAkHhB,MAAMiD,MAAM,GAAG;EACbC,SAAS,EAAE;IACT4B,QAAQ,EAAE,OAAO;IACjBC,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE;EACd,CAAC;EACD7B,KAAK,EAAE;IACL8B,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE;EAChB,CAAC;EACD3B,OAAO,EAAE;IACP4B,MAAM,EAAE,OAAO;IACfC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBP,OAAO,EAAE,MAAM;IACfQ,SAAS,EAAE,MAAM;IACjBJ,YAAY,EAAE,MAAM;IACpBK,eAAe,EAAE;EACnB,CAAC;EACDxE,WAAW,EAAE;IACXwE,eAAe,EAAE,SAAS;IAC1BP,KAAK,EAAE,OAAO;IACdF,OAAO,EAAE,WAAW;IACpBO,YAAY,EAAE,mBAAmB;IACjCR,MAAM,EAAE,OAAO;IACfD,QAAQ,EAAE,KAAK;IACfY,SAAS,EAAE,UAAU;IACrBC,QAAQ,EAAE;EACZ,CAAC;EACD7B,UAAU,EAAE;IACV2B,eAAe,EAAE,SAAS;IAC1BP,KAAK,EAAE,MAAM;IACbF,OAAO,EAAE,WAAW;IACpBO,YAAY,EAAE,kBAAkB;IAChCR,MAAM,EAAE,OAAO;IACfD,QAAQ,EAAE,KAAK;IACfa,QAAQ,EAAE;EACZ,CAAC;EACDxB,cAAc,EAAE;IACdyB,OAAO,EAAE,MAAM;IACfC,GAAG,EAAE;EACP,CAAC;EACDvF,KAAK,EAAE;IACLwF,IAAI,EAAE,CAAC;IACPd,OAAO,EAAE,MAAM;IACfM,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBQ,QAAQ,EAAE;EACZ,CAAC;EACDnB,MAAM,EAAE;IACNI,OAAO,EAAE,WAAW;IACpBS,eAAe,EAAE,SAAS;IAC1BP,KAAK,EAAE,OAAO;IACdI,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,KAAK;IACnBS,MAAM,EAAE,SAAS;IACjBD,QAAQ,EAAE,MAAM;IAChBE,UAAU,EAAE;EACd,CAAC;EACDtF,cAAc,EAAE;IACdiF,OAAO,EAAE,MAAM;IACfM,QAAQ,EAAE,MAAM;IAChBL,GAAG,EAAE,MAAM;IACXT,YAAY,EAAE;EAChB,CAAC;EACDpB,QAAQ,EAAE;IACRgB,OAAO,EAAE,UAAU;IACnBS,eAAe,EAAE,SAAS;IAC1BH,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,MAAM;IACpBS,MAAM,EAAE,SAAS;IACjBD,QAAQ,EAAE,MAAM;IAChBE,UAAU,EAAE;EACd;AACF,CAAC;AAED,eAAejG,OAAO;AAAC,IAAA6E,EAAA;AAAAsB,YAAA,CAAAtB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}